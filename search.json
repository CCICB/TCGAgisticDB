[{"path":"https://ccicb.github.io/TCGAgisticDB/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 TCGAgisticDB authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://ccicb.github.io/TCGAgisticDB/articles/preparing_gistic_data.html","id":"rationale","dir":"Articles","previous_headings":"","what":"Rationale","title":"Prepariing GISTIC data","text":"markdown describes datasets prepared","code":""},{"path":"https://ccicb.github.io/TCGAgisticDB/articles/preparing_gistic_data.html","id":"step-1-create-df-with-paths-to-gistic-files","dir":"Articles","previous_headings":"Rationale","what":"Step 1: Create DF with paths to gistic files","title":"Prepariing GISTIC data","text":"Goal: find URLs gistic files following cohorts can download firebrowse, must know tumor ‘type’ ’re looking (primary solid tissue / primary blood / metastatic. cohorts primary tumour cohorts. See https://gdc.cancer.gov/resources-tcga-users/tcga-code-tables/sample-type-codes explanation types. build based following","code":"c(\"ACC\", \"BLCA\", \"BRCA\", \"CESC\", \"CHOL\", \"COADREAD\", \"COAD\",  \"DLBC\", \"ESCA\", \"FPPP\", \"GBMLGG\", \"GBM\", \"HNSC\", \"KICH\", \"KIPAN\",  \"KIRC\", \"KIRP\", \"LAML\", \"LGG\", \"LIHC\", \"LUAD\", \"LUSC\", \"MESO\",  \"OV\", \"PAAD\", \"PCPG\", \"PRAD\", \"READ\", \"SARC\", \"SKCM\", \"STAD\",  \"STES\", \"TGCT\", \"THCA\", \"THYM\", \"UCEC\", \"UCS\", \"UVM\") LAML  TB (primary tumor from blood) SKCM  #TM sample code (metastatic) https://gdac.broadinstitute.org/runs/analyses__2016_01_28/data/{Cohort}-{Type}/20160128/gdac.broadinstitute.org_{Cohort}-{Type}.CopyNumber_Gistic2.Level_4.2016012800.0.0.tar.gz dplyr::tibble(Cohort = c(\"ACC\", \"BLCA\", \"BRCA\", \"CESC\", \"CHOL\", \"COADREAD\", \"COAD\",    \"DLBC\", \"ESCA\", \"GBMLGG\", \"GBM\", \"HNSC\", \"KICH\", \"KIPAN\",    \"KIRC\", \"KIRP\", \"LAML\", \"LGG\", \"LIHC\", \"LUAD\", \"LUSC\", \"MESO\",    \"OV\", \"PAAD\", \"PCPG\", \"PRAD\", \"READ\", \"SARC\", \"SKCM\", \"STAD\",    \"STES\", \"TGCT\", \"THCA\", \"THYM\", \"UCEC\", \"UCS\", \"UVM\")) |>   dplyr::mutate(     Type = dplyr::case_when(       Cohort == \"LAML\" ~ \"TB\", # primary tumor from blood       Cohort == \"SKCM\" ~ \"TM\", # metastatic       TRUE ~ \"TP\" # Primary Tumour       ),     URL = glue::glue(\"https://gdac.broadinstitute.org/runs/analyses__2016_01_28/data/{Cohort}-{Type}/20160128/gdac.broadinstitute.org_{Cohort}-{Type}.CopyNumber_Gistic2.Level_4.2016012800.0.0.tar.gz\")     ) |> readr::write_csv(file = paste0(system.file(package = \"TCGAgisticDB\"), \"/gistic_urls.csv\"))    # http://gdac.broadinstitute.org/runs/analyses__2016_01_28/data/LAML-TB/20160128/gdac.broadinstitute.org_LAML-TB.CopyNumber_Gistic2.Level_4.2016012800.0.0.tar.gz"},{"path":"https://ccicb.github.io/TCGAgisticDB/articles/preparing_gistic_data.html","id":"step-2-download-gistic-data","dir":"Articles","previous_headings":"Rationale","what":"Step 2: Download GISTIC data","title":"Prepariing GISTIC data","text":"used unexported function gistic_download_all_cohorts(destdir = system.file('gistic_raw/', package = \"TCGAgisticDB\")) download tar-zipped gistic outfiles available TCGA cohort firebrowse. download files : https://gdac.broadinstitute.org/runs/analyses__latest/data/ Specifically download gdac.broadinstitute.org_<cohort>-TP.CopyNumber_Gistic2.Level_4.<analsis_date>.0.0.tar.gz use interchange::gistic_tar_to_crux() download produce Rds files. produce 1 setting (deep/shallow/). just create csv maps cohort RDS file","code":"gistic_download_all_cohorts(destdir = system.file('gistic_raw/', package = \"TCGAgisticDB\")) library(interchange)  path_raw_gistic <- system.file('gistic_raw/', package = \"TCGAgisticDB\")  path_gistic_tarzips <- dir(path_raw_gistic, pattern = \"tar.gz\", full.names = TRUE)  df_outfile_info <- dplyr::tibble(   GisticTarZips = path_gistic_tarzips,   Cohort = stringr::str_extract(string = GisticTarZips, pattern = \"gdac.broadinstitute.org_[a-zA-Z]+?-\") |>     sub(x= _, \"gdac.broadinstitute.org_\", \"\") |>     sub(x=_, \"-$\", \"\"),   outfile_prefix = paste0(Cohort, \"_\", \"Firehose\"),   outfile_dir = paste0(system.file(\"gistic_rds\", package = \"TCGAgisticDB\"), \"/\")   )  for (i in seq_len(nrow(df_outfile_info))){   for (cnlevel in c('all', 'shallow', 'deep')){     outfile_dir <- df_outfile_info[[\"outfile_dir\"]][i]     outfile_prefix <- df_outfile_info[[\"outfile_prefix\"]][i]     gistic_tar <- df_outfile_info[[\"GisticTarZips\"]][i]          outfile_path <- paste0(outfile_dir, '/', outfile_prefix, '.cnlevel_', cnlevel, '.rds')     message(\"Writing: \", basename(outfile_path))          tryCatch(       expr = {convert_gistic_tar_to_crux(gistic_tar = gistic_tar, outfile = outfile_path, isTCGA = TRUE, cnLevel = cnlevel) },       error = function(err){ warning (\"skipping \", outfile_path, \" since reading failed\") },       warning = function(warn) { }     )   }    } df_studynames <- utils::read.csv(system.file(\"tcga_study_abbreviations.csv\", package = \"TCGAgisticDB\"), strip.white = TRUE)  df_doi <- utils::read.csv(system.file(\"doi.csv\", package = \"TCGAgisticDB\"), strip.white = TRUE)  outfile_dir = paste0(system.file(\"gistic_rds\", package = \"TCGAgisticDB\"), \"/\")  rds_files <- dir(outfile_dir, pattern = \"rds\")  df_data <-  dplyr::tibble(   Filepath = rds_files   ) |>   tidyr::extract(col = Filepath, into = c(\"Cohort\", \"Source\", \"CopyNumberLevel\"), regex = \"([a-zA-Z]+?)_([a-zA-Z]+?)\\\\.cnlevel_([a-zA-Z]+?)\\\\.rds\", remove = FALSE)   df_data <- df_data |>   dplyr::mutate(FullName = df_studynames$study_name[match(Cohort, df_studynames$abbreviation)])  #df_data |> dplyr::group_by(Cohort) |> dplyr::filter(!\"all\" %in% CopyNumberLevel)  # Add doi df_data <- df_data |>   dplyr::mutate(DOI = df_doi$DOI[match(Cohort, df_doi$Cohort)])  df_data |>   dplyr::select(Cohort, FullName, Source, CopyNumberLevel, Filepath, DOI) |>   readr::write_csv(paste0(system.file(package = \"TCGAgisticDB\"), \"/cohorts.csv\"))"},{"path":"https://ccicb.github.io/TCGAgisticDB/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sam El-Kamand. Author, maintainer.","code":""},{"path":"https://ccicb.github.io/TCGAgisticDB/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"El-Kamand S (2023). TCGAgisticDB: Database TCGA precomputed GISTIC2 analysis. https://github.com/CCICB/TCGAgisticDB, https://ccicb.github.io/TCGAgisticDB/.","code":"@Manual{,   title = {TCGAgisticDB: Database of TCGA precomputed GISTIC2 analysis},   author = {Sam El-Kamand},   year = {2023},   note = {https://github.com/CCICB/TCGAgisticDB, https://ccicb.github.io/TCGAgisticDB/}, }"},{"path":"https://ccicb.github.io/TCGAgisticDB/index.html","id":"tcgagisticdb","dir":"","previous_headings":"","what":"Database of TCGA precomputed GISTIC2 analysis ","title":"Database of TCGA precomputed GISTIC2 analysis ","text":"Note recommend using TCGAgistic package access data streaming R session. TCGAgisticDB database precomputed GISTIC2 analyses. Currently contains firebrowse hg19 GISTIC2 analyses.","code":""}]
